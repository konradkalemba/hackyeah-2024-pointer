# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17dxaHkOFBEkuoXBbfRRSz52oz2O-zk_i
"""

import re

# Pominąć pierwszy element listy
cleaned_text_list = text[2:]

# Łączenie pozostałych elementów w jeden tekst
full_text = ' '.join(cleaned_text_list)

# Oczyszczenie tekstu
cleaned_lines = []
for segment in full_text.split(','):
    # Usuwamy oznaczenia czasowe
    cleaned_line = re.sub(r'\[.*?\]', '', segment).strip()  # Usuwa znaczniki czasowe
    cleaned_line = re.sub(r'\s+', ' ', cleaned_line).strip()  # Usuwa nadmiarowe spacje
    cleaned_line = cleaned_line.rstrip(',')  # Usuwa końcowe przecinki
    if cleaned_line:  # Dodajemy tylko niepuste linie
        cleaned_lines.append(cleaned_line)

# Łączenie oczyszczonych linii w jeden tekst
final_output = ' '.join(cleaned_lines)

# Usunięcie nadmiarowych spacji na końcu
final_output = re.sub(r'\s+', ' ', final_output).strip()
"".join(final_output)
print(final_output)

#import re
from inspect import formatargspec

# Tekst
text = final_output

# Krok 0: Zastąpienie skrótu "m.in." specjalnym tokenem
text = text.replace("m.in.", "m_in")

# Krok 1: Liczba słów
words = text.split()  # Podziel tekst na słowa
num_words = len(words)  # Policz liczbę słów

# Krok 2: Liczba złożonych słów (więcej niż 4 sylaby)
vowels = "aeiouyąęó"  # Zestaw samogłosek
num_complex_words = 0
numbers = 0
for word in words:
    word = word.lower()  # Zamień na małe litery
    word = re.sub(r'[^a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ]', '', word)  # Usuń znaki inne niż litery
    syllables = 0
    if word.isdigit():
      numbers += 1
    # Liczenie sylab
    for i in range(len(word)):
        if word[i] in vowels:
            if i == 0 or word[i - 1] not in vowels:
                syllables += 1

    # Sprawdzenie, czy słowo ma więcej niż 4 sylaby
    if syllables > 4:
        num_complex_words += 1

# Krok 3: Liczba zdań (dzielone po ., !, ?)
sentences = re.split(r'(?<!\w\.\w.)(?<![A-Z]\.)(?<=\.|\?)\s', text)

# Krok 4: Przywrócenie oryginalnego "m.in."
sentences = [sentence.replace("m_in", "m.in.") for sentence in sentences]

# Usunięcie pustych zdań i policzenie ich
num_sentences = len([s for s in sentences if s.strip()])

# Obliczenie wskaźnika Fog
fog = 0.4 * ((num_words / num_sentences) + 100 * (num_complex_words / num_words))

# Wyniki
print(f"Liczba słów: {num_words}")
print(f"Liczba złożonych słów: {num_complex_words}")
print(f"Liczba zdań: {num_sentences}")
print(f"Fog: {fog}")

